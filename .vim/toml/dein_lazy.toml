[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
hook_add = '''
nnoremap <silent><Leader>q <cmd>QuickRun<CR>
'''
hook_source = '''
source ~/.vim/plugins/quickrun_rc.vim
'''

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = 'BufRead'
lua_source = '''
require('indent_blankline').setup()
'''

[[plugins]]
repo = 'kylechui/nvim-surround'
on_map = {n = ['ys', 'ds', 'cs'], x = ['<Leader>s']}
lua_source = '''
require('nvim-surround').setup {
  keymaps = {
    visual =  "<Leader>s",
  },
}
'''

[[plugins]]
repo = 'numtostr/comment.nvim'
on_map = {n = ['gc', 'gb'], x = ['gc', 'gb']}
lua_source = '''
require('Comment').setup()
'''

[[plugins]]
repo = 'kevinhwang91/nvim-hlslens'
on_map = {n = ['/', '?', '#', '*', 'g#', 'g*']}
hook_source = '''
source ~/.vim/plugins/hlslens_rc.vim
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_event = 'BufRead'
hook_source = '''
nnoremap <Leader>gd <C-u><Cmd>Gitsigns diffthis<CR>
nnoremap <Leader>gp <C-u><Cmd>Gitsigns preview_hunk<CR>
nnoremap <Leader>gq <C-u><Cmd>Gitsigns setqflist<CR>
lua << EOF
require('gitsigns').setup()
EOF
'''

[[plugins]]
repo = 'sindrets/diffview.nvim'
on_source = 'neogit'

[[plugins]]
repo = 'TimUntersberger/neogit'
depends = ['plenary.nvim']
on_cmd = 'Neogit'
hook_add = '''
nnoremap <silent><Leader>gn <cmd>Neogit<CR>
'''
lua_source = '''
require('neogit').setup {
  integrations = {
    diffview = true,
  },
}
'''

[[plugins]]
repo = 'simeji/winresizer'
on_cmd = 'WinResizerStartResize'
hook_add = '''
nnoremap <C-e> <cmd>WinResizerStartResize<CR>
let g:winresizer_vert_resize=1
let g:winresizer_horiz_resize=1
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_source = ['telescope.nvim', 'neogit']

[[plugins]]
repo = 'tami5/sqlite.lua'
on_source = 'telescope.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = ['plenary.nvim']
on_lua = 'telescope'
hook_source = '''
source ~/.vim/plugins/telescope_rc.vim
'''
hook_add = '''
nnoremap <Leader>fr <Cmd>lua require('telescope').extensions.frecency.frecency()<CR>
nnoremap <Leader>fb <Cmd>lua require('telescope').extensions.file_browser.file_browser()<CR>
nnoremap <Leader>ff <Cmd>lua require('telescope.builtin').find_files()<CR>
nnoremap <Leader>fg <Cmd>lua require('telescope.builtin').live_grep()<CR>
nnoremap <Leader>b <Cmd>lua require('telescope.builtin').buffers()<CR>
nnoremap <Leader>tk <Cmd>lua require('telescope.builtin').keymaps()<CR>
nnoremap <Leader>ts <Cmd>lua require('telescope.builtin').search_history()<CR>
nnoremap <Leader>th <Cmd>lua require('telescope.builtin').command_history()<CR>
nnoremap <Leader>tc <Cmd>lua require('telescope.builtin').commands()<CR>
nnoremap <Leader>tr <Cmd>lua require('telescope.builtin').registers()<CR>
'''

[[plugins]]
repo = 'nvim-telescope/telescope-fzf-native.nvim'
on_source = 'telescope.nvim'
build = 'cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release && cmake --build build --config Release && cmake --install build --prefix build' 

[[plugins]]
repo = 'nvim-telescope/telescope-frecency.nvim'
depends = ['sqlite.lua']
on_source = 'telescope.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope-file-browser.nvim'
on_source = 'telescope.nvim'

[[plugins]]
repo = 'kevinhwang91/nvim-bqf'
on_ft = 'qf'
lua_source = '''
require("bqf").setup {
  func_map = {
    pscrollup = '<C-u>',
    pscrolldown = '<C-d>',
  },
}
'''

[[plugins]]
repo = 'haya14busa/vim-edgemotion'
on_map = '<Plug>(edgemotion-'
hook_add = '''
nnoremap <C-j> <Plug>(edgemotion-j)
nnoremap <C-k> <Plug>(edgemotion-k)
vnoremap <C-j> <Plug>(edgemotion-j)
vnoremap <c-k> <plug>(edgemotion-k)
'''

[[plugins]]
repo = 'ggandor/leap.nvim'
on_map = {nx = ['s', 'S', 'gs']}
lua_source = '''
require('leap').add_default_mappings()
'''

[[plugins]]
repo = 'phaazon/hop.nvim'
rev = 'v2'
on_lua = 'hop'
hook_add = '''
nnoremap <silent><leader>hl <C-u><Cmd>lua require('hop').hint_lines()<CR>
nnoremap <silent><leader>hc <C-u><Cmd>lua require('hop').hint_char1()<CR>
nnoremap <silent><leader>hw <C-u><Cmd>lua require('hop').hint_words()<CR>
'''
lua_source = '''
require('hop').setup()
'''

[[plugins]]
repo = 'gabrielpoca/replacer.nvim'
on_ft = 'qf'
hook_add = '''
nnoremap <silent><leader>rp :<C-u>lua require("replacer").run()<cr>
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
lua_source = '''
require("nvim-autopairs").setup()
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
on_map = '<Plug>(fern-action-'
hook_source = '''
source ~/.vim/plugins/fern_rc.vim
'''

[[plugins]]
repo = 'petertriho/nvim-scrollbar'
depends = ['gitsigns.nvim']
on_event = 'BufRead'
lua_source = '''
require("scrollbar").setup {
  handle = { color = '#384863' },
  marks = {
    Search = { color = '#ffffff'},
    GitAdd = { color = '#41bdbf' },
    GitChange = { color = '#c9c542'},
    GitDelete = { color = '#bd3c56'},
  },
  handlers = {
    cursor = false,
    gitsigns = true,
  },
}
'''

[[plugins]]
repo = 'nvim-tree/nvim-tree.lua'
on_cmd = ['NvimTreeOpen', 'NvimTreeFocus', 'NvimTreeFindFile']
hook_add = '''
nnoremap <leader>nn <cmd>NvimTreeFocus<CR>
nnoremap <leader>nf <cmd>NvimTreeFindFile<CR>
nnoremap <leader>nq <cmd>NvimTreeClose<CR>
'''
hook_source = '''
source ~/.vim/plugins/nvimtree_rc.vim
'''

[[plugins]]
repo = 'famiu/bufdelete.nvim'
on_cmd = 'Bdelete'
hook_add = '''
nnoremap <Leader>x <cmd>Bdelete<cr>
nnoremap <Leader>X <cmd>Bdelete!<cr>
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'
on_map = {nxo = '<Plug>(clever-'}
hook_add = '''
let g:clever_f_not_overwrites_standard_mappings = 1
let g:clever_f_mark_direct = 1
let g:clever_f_smart_case = 1
let g:clever_f_use_migemo = 1
nmap f <Plug>(clever-f-f)
xmap f <Plug>(clever-f-f)
omap f <Plug>(clever-f-f)
nmap F <Plug>(clever-f-F)
xmap F <Plug>(clever-f-F)
omap F <Plug>(clever-f-F)
nmap t <Plug>(clever-f-t)
xmap t <Plug>(clever-f-t)
omap t <Plug>(clever-f-t)
nmap T <Plug>(clever-f-T)
xmap T <Plug>(clever-f-T)
omap T <Plug>(clever-f-T)
'''

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
on_cmd = 'ColorizerAttachToBuffer'
lua_source = '''
require'colorizer'.setup()
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = 'has("nvim")'
on_event = 'BufRead'
lua_source = '''
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    disable = {'latex', 'help'},
  },
  refactor = {
    highlight_defintions = {
      enable = true,
    },
    smart_rename = {
      enable = true,
      smart_rename = 'grr'
    },
    navigation = {
      enable = true,
      goto_definition = 'gnd',
      list_definitions = 'gnD',
    },
  },
  ignore_install = { "phpdoc", "help" },
  ensure_installed = 'all',
  matchup = {
    enable = true,
    disable_virtual_text = true,
  },
}
'''

[[plugins]]
repo = 'nvim-treesitter/playground'
on_source = 'nvim-treesitter'

[[plugins]]
repo = 'andymass/vim-matchup'
on_source = 'nvim-treesitter'
hook_add = '''
inoremap <C-p> <ESC><Plug>(matchup-%)
nnoremap <C-p> <Plug>(matchup-%)
'''

[[plugins]]
repo = 'markonm/traces.vim'
on_event = 'CmdwinEnter'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css']

[[plugins]]
repo = 'mbbill/undotree'
on_cmd = 'UndotreeToggle'

[[plugins]]
repo = 'dstein64/vim-startuptime'
on_cmd = 'StartupTime'
